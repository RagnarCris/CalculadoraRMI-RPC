# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import calc_pb2 as calc__pb2


class CalculatorStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Create = channel.unary_unary(
        '/Calculator/Create',
        request_serializer=calc__pb2.Number.SerializeToString,
        response_deserializer=calc__pb2.SessionOperation.FromString,
        )
    self.Answer = channel.unary_unary(
        '/Calculator/Answer',
        request_serializer=calc__pb2.SessionOperation.SerializeToString,
        response_deserializer=calc__pb2.Number.FromString,
        )
    self.Add = channel.unary_unary(
        '/Calculator/Add',
        request_serializer=calc__pb2.SessionOperation.SerializeToString,
        response_deserializer=calc__pb2.Number.FromString,
        )
    self.Subtract = channel.unary_unary(
        '/Calculator/Subtract',
        request_serializer=calc__pb2.SessionOperation.SerializeToString,
        response_deserializer=calc__pb2.Number.FromString,
        )
    self.Multiply = channel.unary_unary(
        '/Calculator/Multiply',
        request_serializer=calc__pb2.SessionOperation.SerializeToString,
        response_deserializer=calc__pb2.Number.FromString,
        )
    self.Divide = channel.unary_unary(
        '/Calculator/Divide',
        request_serializer=calc__pb2.SessionOperation.SerializeToString,
        response_deserializer=calc__pb2.Number.FromString,
        )


class CalculatorServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Create(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Answer(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Add(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Subtract(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Multiply(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Divide(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CalculatorServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Create': grpc.unary_unary_rpc_method_handler(
          servicer.Create,
          request_deserializer=calc__pb2.Number.FromString,
          response_serializer=calc__pb2.SessionOperation.SerializeToString,
      ),
      'Answer': grpc.unary_unary_rpc_method_handler(
          servicer.Answer,
          request_deserializer=calc__pb2.SessionOperation.FromString,
          response_serializer=calc__pb2.Number.SerializeToString,
      ),
      'Add': grpc.unary_unary_rpc_method_handler(
          servicer.Add,
          request_deserializer=calc__pb2.SessionOperation.FromString,
          response_serializer=calc__pb2.Number.SerializeToString,
      ),
      'Subtract': grpc.unary_unary_rpc_method_handler(
          servicer.Subtract,
          request_deserializer=calc__pb2.SessionOperation.FromString,
          response_serializer=calc__pb2.Number.SerializeToString,
      ),
      'Multiply': grpc.unary_unary_rpc_method_handler(
          servicer.Multiply,
          request_deserializer=calc__pb2.SessionOperation.FromString,
          response_serializer=calc__pb2.Number.SerializeToString,
      ),
      'Divide': grpc.unary_unary_rpc_method_handler(
          servicer.Divide,
          request_deserializer=calc__pb2.SessionOperation.FromString,
          response_serializer=calc__pb2.Number.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Calculator', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
